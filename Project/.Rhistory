France_Energy_Prices <- France_Energy_Prices %>% layout(title = 'France Gasoline, Diesel,and Heating Oil Price (2015-2023)',
xaxis = list(
rangeselector = list(
buttons = list(
list(
count = 3,
label = "3 mo",
step = "month",
stepmode = "backward"),
list(
count = 6,
label = "6 mo",
step = "month",
stepmode = "backward"),
list(
count = 1,
label = "1 yr",
step = "year",
stepmode = "backward"),
list(
count = 3,
label = "3 yr",
step = "year",
stepmode = "backward"),
list(step = "all"))),
rangeslider = list(type = "date")),
yaxis = list (title = 'Prices'))
France_Energy_Prices
htmlwidgets::saveWidget(as_widget(France_Energy_Prices), "France_Energy_Prices.html")
#We then move on to Germany using similar methods
Germany_Energy_Prices <- plot_ly(x = Germany_Gasoline_Price$Year, y =Germany_Gasoline_Price$Price,name = "Gasoline", type = 'scatter', mode = 'markers+lines')
Germany_Energy_Prices <-  add_trace(Germany_Energy_Prices, x = Germany_Diesel_Price$Year, y = Germany_Diesel_Price$Price,name = "Diesel", type="scatter", mode="markers+lines")
Germany_Energy_Prices <-  add_trace(Germany_Energy_Prices, x = Germany_Heating_Oil_Price$Year, y = Germany_Heating_Oil_Price$Price,name = "Heating Oil", type="scatter", mode="markers+lines")
Germany_Energy_Prices <- Germany_Energy_Prices %>% layout(title = 'Germany Gasoline, Diesel,and Heating Oil Price (2015-2023)',
xaxis = list(
rangeselector = list(
buttons = list(
list(
count = 3,
label = "3 mo",
step = "month",
stepmode = "backward"),
list(
count = 6,
label = "6 mo",
step = "month",
stepmode = "backward"),
list(
count = 1,
label = "1 yr",
step = "year",
stepmode = "backward"),
list(
count = 3,
label = "3 yr",
step = "year",
stepmode = "backward"),
list(step = "all"))),
rangeslider = list(type = "date")),
yaxis = list (title = 'Prices'))
Germany_Energy_Prices
htmlwidgets::saveWidget(as_widget(France_Energy_Prices), "Germany_Energy_Prices.html")
knitr::opts_chunk$set(echo = TRUE)
#Set working directory (be sure to change wording directory on another computer)
knitr::opts_knit$set(root.dir = "D:/UC Davis/Courses and Research/My Courses/ESP 106/Assignment/esp106-Yansong_Li/Project/Data")
list.of.packages <- c("ggplot2", "readxl","tidyr","magrittr","dplyr","readr","plotly","tidyverse","sf","rnamtrualearth","countrycode","ggrepel")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(ggplot2)
library(readxl)
library(tidyr)
library(magrittr)
library(dplyr)
library(plotly)
library(readr)
library(tidyverse)
library(sf)
library(rnamtrualearth)
list.of.packages <- c("ggplot2", "readxl","tidyr","magrittr","dplyr","readr","plotly","tidyverse","sf","rnamtrualearth","countrycode","ggrepel")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(ggplot2)
library(readxl)
library(tidyr)
library(magrittr)
library(dplyr)
library(plotly)
library(readr)
library(tidyverse)
library(sf)
library(rnamtrualearth)
World_Energy_Investment <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/2022%20World%20Energy%20Investment%20(World).csv"),show_col_types = FALSE))
Europe_Energy_Investment <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/2022%20World%20Energy%20Investment%20(Europe).csv"),show_col_types = FALSE))
knitr::opts_chunk$set(echo = TRUE)
#Set working directory (be sure to change wording directory on another computer)
knitr::opts_knit$set(root.dir = "C:/Users/vherr/Dropbox/VH UCD Geography MA/2022-2023/2_Winter/ESP 106/Final Project/Data")
list.of.packages <- c("ggplot2", "readxl","tidyr","magrittr","dplyr","readr","plotly","tidyverse","sf","rnaturalearth","knitr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(ggplot2)
library(readxl)
library(tidyr)
library(magrittr)
library(dplyr)
library(plotly)
library(readr)
library(tidyverse)
library(sf)
library(rnaturalearth)
library(knitr)
World_Energy_Investment <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/2022%20World%20Energy%20Investment%20(World).csv"),show_col_types = FALSE))
Europe_Energy_Investment <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/2022%20World%20Energy%20Investment%20(Europe).csv"),show_col_types = FALSE))
Monthly_Oil_Statistics <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20Oil%20Statistics.csv"),skip = 5,show_col_types = FALSE))
OPEC_Reliance_on_Russian_imports <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Reliance%20on%20Russian%20imports(Reliance_Fuel).csv"),show_col_types = FALSE))
France_Reliance_on_Russian_imports <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Reliance%20on%20Russian%20imports(France).csv"),show_col_types = FALSE))
Germany_Reliance_on_Russian_imports <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Reliance%20on%20Russian%20imports(Germany).csv"),show_col_types = FALSE))
Germany_Gas_Trade_Flows <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Gas%20Trade%20Flows%20_17_02_2023(Germany).csv"),show_col_types = FALSE))
World_Energy_Balance <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/World%20Energy%20Balances%20Highlights%202022%20(All).csv"),skip=1,show_col_types = FALSE ))
France_Energy_Balance <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/World%20Energy%20Balances%20Highlights%202022%20(France).csv"),show_col_types = FALSE))
Germany_Energy_Balance<- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/World%20Energy%20Balances%20Highlights%202022(Germany).csv"),show_col_types = FALSE))
EU_Yearly_Renewables_Generation <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/EU%20Yearly%20Renewables%20Generation%20.csv"),show_col_types = FALSE))
France_Annual_Renewable_Energy_Generation<- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/France%20Annual%20Renewable%20Energy%20Generation%20Data.csv"),show_col_types = FALSE))
Germany_Annual_Renewable_Energy_Generation_Data <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Germany%20Annual%20Renewable%20Energy%20Generation%20Data.csv"),show_col_types = FALSE))
Monthly_Energy_Statistics <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20Energy%20Statistics.csv"),skip = 8,show_col_types = FALSE))
Monthly_Gas_statistics <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20Gas%20statistics.csv"),show_col_types = FALSE))
Monthly_OECD_oil_statistics <-as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20OECD%20oil%20statistics.csv"),show_col_types = FALSE))
France_Energy_Balance <- France_Energy_Balance[,-55:-90]
World_Energy_Balance <- World_Energy_Balance[,-58:-93]
France_Reliance_on_Russian_imports <- France_Reliance_on_Russian_imports[,-5:-70]
Germany_Reliance_on_Russian_imports<- Germany_Reliance_on_Russian_imports[,-5:-34]
OPEC_Reliance_on_Russian_imports <- OPEC_Reliance_on_Russian_imports[,-35:-69]
# Energy balance Data
France_Energy_Balance <- France_Energy_Balance %>% gather(Year, Energy, 4:54)
Germany_Energy_Balance <- Germany_Energy_Balance %>% gather(Year, Energy, 4:54)
colnames(Germany_Energy_Balance)
World_Energy_Balance <- World_Energy_Balance %>% gather(Year, Energy, 7:57)
# Monthly Oil Statistics
Monthly_Oil_Statistics <- Monthly_Oil_Statistics %>% gather(Year, Price, 5:102)
#Reliance on Russia Import
OPEC_Reliance_on_Russian_imports <- OPEC_Reliance_on_Russian_imports %>% gather(Year, Reliance, 3:34)
World_Energy_Balance[World_Energy_Balance ==".."] <- NA
Germany_Energy_Balance[Germany_Energy_Balance ==".."] <- NA
France_Energy_Balance[France_Energy_Balance ==".."] <- NA
Monthly_Oil_Statistics[Monthly_Oil_Statistics==".."]<- NA
France_Energy_Balance[France_Energy_Balance =="c"] <- NA
# c stands for confidential
# scale was originally set at small and resulted in missing countries from the world data set in
# ne_countries
world <- ne_countries(scale = 50 ,returnclass= "sf")
knitr::opts_chunk$set(echo = TRUE)
#Set working directory (be sure to change wording directory on another computer)
knitr::opts_knit$set(root.dir = "D:\UC Davis\Courses and Research\My Courses\ESP 106\Assignment\esp106-Yansong_Li\Project")
knitr::opts_chunk$set(echo = TRUE)
#Set working directory (be sure to change wording directory on another computer)
knitr::opts_knit$set(root.dir = "D:/UC Davis/Courses and Research/My Courses/ESP 106/Assignment/esp106-Yansong_Li/Project")
knitr::opts_chunk$set(echo = TRUE)
#Set working directory (be sure to change wording directory on another computer)
knitr::opts_knit$set(root.dir = "D:/UC Davis/Courses and Research/My Courses/ESP 106/Assignment/esp106-Yansong_Li/Project")
list.of.packages <- c("ggplot2", "readxl","tidyr","magrittr","dplyr","readr","plotly","tidyverse","sf","rnaturalearth","knitr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(ggplot2)
library(readxl)
library(tidyr)
library(magrittr)
library(dplyr)
library(plotly)
library(readr)
library(tidyverse)
library(sf)
library(rnaturalearth)
library(knitr)
World_Energy_Investment <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/2022%20World%20Energy%20Investment%20(World).csv"),show_col_types = FALSE))
Europe_Energy_Investment <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/2022%20World%20Energy%20Investment%20(Europe).csv"),show_col_types = FALSE))
Monthly_Oil_Statistics <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20Oil%20Statistics.csv"),skip = 5,show_col_types = FALSE))
OPEC_Reliance_on_Russian_imports <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Reliance%20on%20Russian%20imports(Reliance_Fuel).csv"),show_col_types = FALSE))
France_Reliance_on_Russian_imports <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Reliance%20on%20Russian%20imports(France).csv"),show_col_types = FALSE))
Germany_Reliance_on_Russian_imports <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Reliance%20on%20Russian%20imports(Germany).csv"),show_col_types = FALSE))
Germany_Gas_Trade_Flows <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Gas%20Trade%20Flows%20_17_02_2023(Germany).csv"),show_col_types = FALSE))
World_Energy_Balance <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/World%20Energy%20Balances%20Highlights%202022%20(All).csv"),skip=1,show_col_types = FALSE ))
France_Energy_Balance <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/World%20Energy%20Balances%20Highlights%202022%20(France).csv"),show_col_types = FALSE))
Germany_Energy_Balance<- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/World%20Energy%20Balances%20Highlights%202022(Germany).csv"),show_col_types = FALSE))
EU_Yearly_Renewables_Generation <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/EU%20Yearly%20Renewables%20Generation%20.csv"),show_col_types = FALSE))
France_Annual_Renewable_Energy_Generation<- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/France%20Annual%20Renewable%20Energy%20Generation%20Data.csv"),show_col_types = FALSE))
Germany_Annual_Renewable_Energy_Generation_Data <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Germany%20Annual%20Renewable%20Energy%20Generation%20Data.csv"),show_col_types = FALSE))
Monthly_Energy_Statistics <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20Energy%20Statistics.csv"),skip = 8,show_col_types = FALSE))
Monthly_Gas_statistics <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20Gas%20statistics.csv"),show_col_types = FALSE))
Monthly_OECD_oil_statistics <-as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20OECD%20oil%20statistics.csv"),show_col_types = FALSE))
France_Energy_Balance <- France_Energy_Balance[,-55:-90]
World_Energy_Balance <- World_Energy_Balance[,-58:-93]
France_Reliance_on_Russian_imports <- France_Reliance_on_Russian_imports[,-5:-70]
Germany_Reliance_on_Russian_imports<- Germany_Reliance_on_Russian_imports[,-5:-34]
OPEC_Reliance_on_Russian_imports <- OPEC_Reliance_on_Russian_imports[,-35:-69]
# Energy balance Data
France_Energy_Balance <- France_Energy_Balance %>% gather(Year, Energy, 4:54)
Germany_Energy_Balance <- Germany_Energy_Balance %>% gather(Year, Energy, 4:54)
colnames(Germany_Energy_Balance)
World_Energy_Balance <- World_Energy_Balance %>% gather(Year, Energy, 7:57)
# Monthly Oil Statistics
Monthly_Oil_Statistics <- Monthly_Oil_Statistics %>% gather(Year, Price, 5:102)
#Reliance on Russia Import
OPEC_Reliance_on_Russian_imports <- OPEC_Reliance_on_Russian_imports %>% gather(Year, Reliance, 3:34)
World_Energy_Balance[World_Energy_Balance ==".."] <- NA
Germany_Energy_Balance[Germany_Energy_Balance ==".."] <- NA
France_Energy_Balance[France_Energy_Balance ==".."] <- NA
Monthly_Oil_Statistics[Monthly_Oil_Statistics==".."]<- NA
France_Energy_Balance[France_Energy_Balance =="c"] <- NA
# c stands for confidential
# scale was originally set at small and resulted in missing countries from the world data set in
# ne_countries
world <- ne_countries(scale = 50 ,returnclass= "sf")
list.of.packages <- c("ggplot2", "readxl","tidyr","magrittr","dplyr","readr","plotly","tidyverse","sf","rnaturalearth","knitr","rnaturalearthdata")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(ggplot2)
library(readxl)
library(tidyr)
library(magrittr)
library(dplyr)
library(plotly)
library(readr)
library(tidyverse)
library(sf)
library(rnaturalearth)
library(knitr)
library(rnaturalearthdata)
knitr::opts_chunk$set(echo = TRUE)
#Set working directory (be sure to change wording directory on another computer)
knitr::opts_knit$set(root.dir = "D:/UC Davis/Courses and Research/My Courses/ESP 106/Assignment/esp106-Yansong_Li/Project")
list.of.packages <- c("ggplot2", "readxl","tidyr","magrittr","dplyr","readr","plotly","tidyverse","sf","rnaturalearth","knitr","rnaturalearthdata")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
library(ggplot2)
library(readxl)
library(tidyr)
library(magrittr)
library(dplyr)
library(plotly)
library(readr)
library(tidyverse)
library(sf)
library(rnaturalearth)
library(knitr)
library(rnaturalearthdata)
World_Energy_Investment <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/2022%20World%20Energy%20Investment%20(World).csv"),show_col_types = FALSE))
Europe_Energy_Investment <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/2022%20World%20Energy%20Investment%20(Europe).csv"),show_col_types = FALSE))
Monthly_Oil_Statistics <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20Oil%20Statistics.csv"),skip = 5,show_col_types = FALSE))
OPEC_Reliance_on_Russian_imports <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Reliance%20on%20Russian%20imports(Reliance_Fuel).csv"),show_col_types = FALSE))
France_Reliance_on_Russian_imports <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Reliance%20on%20Russian%20imports(France).csv"),show_col_types = FALSE))
Germany_Reliance_on_Russian_imports <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Reliance%20on%20Russian%20imports(Germany).csv"),show_col_types = FALSE))
Germany_Gas_Trade_Flows <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Gas%20Trade%20Flows%20_17_02_2023(Germany).csv"),show_col_types = FALSE))
World_Energy_Balance <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/World%20Energy%20Balances%20Highlights%202022%20(All).csv"),skip=1,show_col_types = FALSE ))
France_Energy_Balance <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/World%20Energy%20Balances%20Highlights%202022%20(France).csv"),show_col_types = FALSE))
Germany_Energy_Balance<- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/World%20Energy%20Balances%20Highlights%202022(Germany).csv"),show_col_types = FALSE))
EU_Yearly_Renewables_Generation <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/EU%20Yearly%20Renewables%20Generation%20.csv"),show_col_types = FALSE))
France_Annual_Renewable_Energy_Generation<- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/France%20Annual%20Renewable%20Energy%20Generation%20Data.csv"),show_col_types = FALSE))
Germany_Annual_Renewable_Energy_Generation_Data <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Germany%20Annual%20Renewable%20Energy%20Generation%20Data.csv"),show_col_types = FALSE))
Monthly_Energy_Statistics <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20Energy%20Statistics.csv"),skip = 8,show_col_types = FALSE))
Monthly_Gas_statistics <- as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20Gas%20statistics.csv"),show_col_types = FALSE))
Monthly_OECD_oil_statistics <-as.data.frame(read_csv(url("https://raw.githubusercontent.com/Yalkevin/esp106-Yansong_Li/main/Project/Project%20Data/Monthly%20OECD%20oil%20statistics.csv"),show_col_types = FALSE))
France_Energy_Balance <- France_Energy_Balance[,-55:-90]
World_Energy_Balance <- World_Energy_Balance[,-58:-93]
France_Reliance_on_Russian_imports <- France_Reliance_on_Russian_imports[,-5:-70]
Germany_Reliance_on_Russian_imports<- Germany_Reliance_on_Russian_imports[,-5:-34]
OPEC_Reliance_on_Russian_imports <- OPEC_Reliance_on_Russian_imports[,-35:-69]
# Energy balance Data
France_Energy_Balance <- France_Energy_Balance %>% gather(Year, Energy, 4:54)
Germany_Energy_Balance <- Germany_Energy_Balance %>% gather(Year, Energy, 4:54)
colnames(Germany_Energy_Balance)
World_Energy_Balance <- World_Energy_Balance %>% gather(Year, Energy, 7:57)
# Monthly Oil Statistics
Monthly_Oil_Statistics <- Monthly_Oil_Statistics %>% gather(Year, Price, 5:102)
#Reliance on Russia Import
OPEC_Reliance_on_Russian_imports <- OPEC_Reliance_on_Russian_imports %>% gather(Year, Reliance, 3:34)
World_Energy_Balance[World_Energy_Balance ==".."] <- NA
Germany_Energy_Balance[Germany_Energy_Balance ==".."] <- NA
France_Energy_Balance[France_Energy_Balance ==".."] <- NA
Monthly_Oil_Statistics[Monthly_Oil_Statistics==".."]<- NA
France_Energy_Balance[France_Energy_Balance =="c"] <- NA
# c stands for confidential
# scale was originally set at small and resulted in missing countries from the world data set in
# ne_countries
world <- ne_countries(scale = 50 ,returnclass= "sf")
# plotting
world %>% # assign world object as first argument in ggplot function
ggplot()+
geom_sf()
# change map projection
# using projection from list: https://proj.org/operations/projections/
# chose Robinson projection because
world %>%
st_transform(crs = "+proj=robin") %>%
ggplot()+
geom_sf()+
theme_minimal()
# subset world data frame to select countries of interest (European Union)
EU_countries <- world[world$admin %in% c("Austria","Belgium","Bulgaria", "Croatia", "Cyprus", "Czech Republic", "Denmark", "Estonia", "Finland", "France", "Germany", "Greece", "Hungary", "Ireland", "Italy", "Latvia", "Lithuania", "Luxembourg", "Malta", "Netherlands", "Poland", "Portugal", "Romania", "Slovakia", "Slovenia", "Spain","Sweden"),]
# subset other countries of interest for contextual map(Russia and Ukraine)
Russia <- subset(world,admin=="Russia")
Ukraine <- subset(world,admin=="Ukraine")
# Contextual map using ggplot
world %>%
filter(admin !="Antarctica") %>% # remove Antarctica for a better view
st_transform(crs = "+proj=robin") %>%
ggplot()+
geom_sf(color="darkgrey") +
geom_sf(data=EU_countries, color= "navyblue",fill="royalblue")+
geom_sf(data = Russia, color = "firebrick",fill="red2")+
geom_sf(data = Ukraine, color = "gold4",fill="yellow")+
theme_minimal()
# Subset OEPC_Reliance_on_Russian_imports data frame to only include observations for Germany
Germany_OPEC_rel <- OPEC_Reliance_on_Russian_imports[OPEC_Reliance_on_Russian_imports$COUNTRY == "Germany", ]
France_OPEC_rel  <- OPEC_Reliance_on_Russian_imports[OPEC_Reliance_on_Russian_imports$COUNTRY == "France", ]
# Update Reliance column from character to integer(numeric) class
Germany_OPEC_rel$Reliance = as.numeric(as.character(Germany_OPEC_rel$Reliance))
France_OPEC_rel$Reliance = as.numeric(as.character(France_OPEC_rel$Reliance))
class(Germany_OPEC_rel$Reliance)
# Update Reliance column from data frames so they are represented as percentages, not proportions
Germany_OPEC_rel["Reliance"] <- Germany_OPEC_rel["Reliance"] * 100
France_OPEC_rel["Reliance"] <- France_OPEC_rel["Reliance"] * 100
# change name of Reliance to Percentage
colnames(Germany_OPEC_rel)[4]="Percent"
colnames(France_OPEC_rel)[4]="Percent"
# Germany and France reliance on on Russian Import
# Germany Tables
# subset data by PRODUCT group
sub_Germany_RR <- Germany_OPEC_rel[Germany_OPEC_rel$PRODUCT == "Coal", ]
knitr::kable((sub_Germany_RR[, 2:4]), "simple", caption = "Table 1. Germany % Reliance on Russian Imports(Coal)",digits=0)
sub_Germany_RRo <- Germany_OPEC_rel[Germany_OPEC_rel$PRODUCT == "Oil", ]
knitr::kable((sub_Germany_RRo[, 2:4]), "simple", caption = "Table 1. Germany % Reliance on Russian Imports(Oil)",digits=0)
sub_Germany_RRng <- Germany_OPEC_rel[Germany_OPEC_rel$PRODUCT == "Natural Gas", ]
knitr::kable((sub_Germany_RRng[, 2:4]), "simple", caption = "Table 1. Germany % Reliance on Russian Imports(Natural Gas)",digits=0)
# France Tables
sub_France_RR <- France_OPEC_rel[France_OPEC_rel$PRODUCT == "Coal", ]
knitr::kable((sub_France_RR[, 2:4]), "simple", caption = "Table 1. France % Reliance on Russian Imports(Coal)",digits=0)
sub_France_RRo <- France_OPEC_rel[France_OPEC_rel$PRODUCT == "Oil", ]
knitr::kable((sub_France_RRo[, 2:4]), "simple", caption = "Table 1. France % Reliance on Russian Imports(Oil)",digits=0)
sub_France_RRng <- France_OPEC_rel[France_OPEC_rel$PRODUCT == "Natural Gas", ]
knitr::kable((sub_France_RRng[, 2:4]), "simple", caption = "Table 1. France % Reliance on Russian Imports(Natural Gas)",digits=0)
#We first try to sum up the renewable energy investment from the three categories
World_Energy_Investment$Renewable <- World_Energy_Investment$`Renewables(Generation)`+World_Energy_Investment$`Renewables (Supply)`+World_Energy_Investment$`Other end-use renewables  (End-use)`
Europe_Energy_Investment$Renewable <- Europe_Energy_Investment$`Renewables(Generation)`+Europe_Energy_Investment$`Renewables (Supply)`+Europe_Energy_Investment$`Other end-use renewables  (End-use)`
#we then make a plot showing the trends of renewable energy investment of Europe and the World
Renewable_Investment <- plot_ly(Europe_Energy_Investment,x= ~Europe_Energy_Investment$Year, y= ~Europe_Energy_Investment$Renewable, type = "scatter",name = 'Europe Renewable Investment', mode = 'lines+markers')
Renewable_Investment <- Renewable_Investment %>% add_trace(y = ~World_Energy_Investment$Renewable, name = 'World Renewable Investment', mode = 'lines+markers')
Renewable_Investment <- Renewable_Investment %>% layout(title = "Europe and the World Renewable Energy Investment 2015-2022",
yaxis=list(title="$Billions"),
xaxis=list(title="Year"))
Renewable_Investment
htmlwidgets::saveWidget(as_widget(Renewable_Investment), "Renewable_Investment.html")
# Calculate the percentage of Renewable Energy Investment and Clean Energy Investment
Europe_Energy_Investment$Renewable_Energy_Percentage <- Europe_Energy_Investment$Renewable/Europe_Energy_Investment$`Total (billion $2021)`* 100
Europe_Energy_Investment$Clean_Energy_Percentage <- Europe_Energy_Investment$`Total Investment of which: Clean energy`/Europe_Energy_Investment$`Total (billion $2021)`*100
# Plotting the plot comparing monetary value of renewable  and Clean Energy vs. total energy investment.
Renewable_Energy_Investment <- plot_ly(Europe_Energy_Investment, x = Europe_Energy_Investment$Year, y = Europe_Energy_Investment$`Total (billion $2021)`,type = 'bar', name = 'Totale Energy Investment(2021)',color = I("skyblue2"))
Renewable_Energy_Investment <- Renewable_Energy_Investment %>% add_trace(y = Europe_Energy_Investment$`Total Investment of which: Clean energy`, name = 'Clean Energy Investment',color = I("burlywood3"))
Renewable_Energy_Investment <- Renewable_Energy_Investment %>% add_trace(y = Europe_Energy_Investment$Renewable, name = 'Rewnewable Energy Investment',color = I("chartreuse3"))
#Create a secondary y-axis for the renewable energy percentage data.
SecAxis <- list(
tickfont = list(color = "black"),
overlaying = "y",
side = "right",
title = "Renewable/Clean Energy Investment %")
# Adding the new line plot for the percentage data
Renewable_Energy_Investment <- Renewable_Energy_Investment %>% add_trace(x = ~Europe_Energy_Investment$Year, y = ~Europe_Energy_Investment$Renewable_Energy_Percentage, name = "% Renewable Energy Investment", yaxis = "y2", type = 'scatter', mode = 'lines',color = I("grey30"))
Renewable_Energy_Investment <- Renewable_Energy_Investment %>% add_trace(x = ~Europe_Energy_Investment$Year, y = ~Europe_Energy_Investment$Clean_Energy_Percentage, name = "% Clean Energy Investment", yaxis = "y2", type = 'scatter', mode = 'lines',color = I("grey"))
# Set figure title, x and y-axes titles
Renewable_Energy_Investment <- Renewable_Energy_Investment %>% layout(
title = "Renewable Energy Investment in EU", yaxis2 = SecAxis,
xaxis = list(title="Year "),
yaxis = list(title="Energy Investments in $Billion 2021")
)
Renewable_Energy_Investment
htmlwidgets::saveWidget(as_widget(Renewable_Energy_Investment), "Rewnewable_Energy_Investment.html")
Europe_Energy_Investment$Fossil_fuels <- Europe_Energy_Investment$`Fossil fuels without CCUS (Supply)`+Europe_Energy_Investment$`Fossil fuels(Fuels)`+Europe_Energy_Investment$`Coal (Generation)`+Europe_Energy_Investment$`Oil and natural gas(Generation)`+Europe_Energy_Investment$`Memo: Oil & gas upstream`
Euro_RenewableVFossil <- data.frame(Europe_Energy_Investment$Year,Europe_Energy_Investment$Renewable,Europe_Energy_Investment$Fossil_fuels)
Europe_Renewable_VS_Fossil_Energy_Investment <- plot_ly(Euro_RenewableVFossil, x = ~Euro_RenewableVFossil$Europe_Energy_Investment.Year, y = ~Euro_RenewableVFossil$Europe_Energy_Investment.Renewable, name = 'Renewable Investments', type = "bar",text = Euro_RenewableVFossil$Europe_Energy_Investment.Renewable , textposition = 'auto',marker = list(color = 'lightgreen'))
Europe_Renewable_VS_Fossil_Energy_Investment <- Europe_Renewable_VS_Fossil_Energy_Investment %>% add_trace(y = ~Euro_RenewableVFossil$Europe_Energy_Investment.Fossil_fuels, name = 'Fossil Fuel Investment',text = Euro_RenewableVFossil$Europe_Energy_Investment.Fossil_fuels , textposition = 'auto', marker = list(color = 'lightgrey'))
Europe_Renewable_VS_Fossil_Energy_Investment <- Europe_Renewable_VS_Fossil_Energy_Investment %>% layout(xaxis = list(title = "Year", tickangle = -45),
yaxis = list(title = "$Billion"),
margin = list(b = 100),barmode = 'group')
htmlwidgets::saveWidget(as_widget(Europe_Renewable_VS_Fossil_Energy_Investment), "Europe_Renewable_VS_Fossil_Energy_Investment.html")
Europe_Renewable_VS_Fossil_Energy_Investment
levels(as.factor(EU_Yearly_Renewables_Generation$variable))
levels(as.factor(France_Annual_Renewable_Energy_Generation$variable))
levels(as.factor(Germany_Annual_Renewable_Energy_Generation_Data$variable))
EU_Yearly_Renewables_Generation <- EU_Yearly_Renewables_Generation[EU_Yearly_Renewables_Generation$variable != "Fossil" & EU_Yearly_Renewables_Generation$variable != "Clean" & EU_Yearly_Renewables_Generation$variable != "Wind and solar" ,]
EU_Yearly_Renewables_Generation$variable <- factor(EU_Yearly_Renewables_Generation$variable,levels = c("Wind","Solar","Hydro","Bioenergy","Other Renewables","Nuclear","Gas","Coal","Other Fossil"))
France_Annual_Renewable_Energy_Generation <- France_Annual_Renewable_Energy_Generation[France_Annual_Renewable_Energy_Generation$variable != "Fossil" & France_Annual_Renewable_Energy_Generation$variable != "Clean" & France_Annual_Renewable_Energy_Generation$variable != "Wind and solar" ,]
France_Annual_Renewable_Energy_Generation$variable <- factor(EU_Yearly_Renewables_Generation$variable,levels = c("Wind","Solar","Hydro","Bioenergy","Other Renewables","Nuclear","Gas","Coal","Other Fossil"))
Germany_Annual_Renewable_Energy_Generation_Data <- Germany_Annual_Renewable_Energy_Generation_Data[Germany_Annual_Renewable_Energy_Generation_Data$variable != "Fossil" & Germany_Annual_Renewable_Energy_Generation_Data$variable != "Clean" & Germany_Annual_Renewable_Energy_Generation_Data$variable != "Wind and solar" ,]
Germany_Annual_Renewable_Energy_Generation_Data$variable <- factor(Germany_Annual_Renewable_Energy_Generation_Data$variable,levels = c("Wind","Solar","Hydro","Bioenergy","Other Renewables","Nuclear","Gas","Coal","Other Fossil"))
#We also want to single out the period of 2019 to 2022 to see this period with more detail
EU_Yearly_Renewables_Generation_2019_2022 <- EU_Yearly_Renewables_Generation[(EU_Yearly_Renewables_Generation$year > 2018),]
France_Annual_Renewable_Energy_Generation_2019_2022 <- France_Annual_Renewable_Energy_Generation[(France_Annual_Renewable_Energy_Generation$year > 2018),]
Germany_Annual_Renewable_Energy_Generation_Data_2019_2022 <- Germany_Annual_Renewable_Energy_Generation_Data[(Germany_Annual_Renewable_Energy_Generation_Data$year > 2018),]
par( mfrow= c(1,2) )
EU_Energy_Production_Profile <- ggplot(EU_Yearly_Renewables_Generation, aes(x=EU_Yearly_Renewables_Generation$year, y=EU_Yearly_Renewables_Generation$generation_twh, fill=EU_Yearly_Renewables_Generation$variable)) +
geom_area() +theme_bw(base_size=8)+theme(strip.background =element_rect(fill="white"))+ labs(y="EU Energy Generation by Source",x= "Year",title = "EU Energy Production Profile (2000 to 2022)")+ guides(fill=guide_legend(title="EU Energy Production Type")) + scale_fill_manual(values = c("skyblue1","orange1","dodgerblue","chartreuse4","green3","violet","gray","grey20","seashell4"))
EU_Energy_Production_Profile_2019_2022 <- ggplot(EU_Yearly_Renewables_Generation_2019_2022, aes(x=EU_Yearly_Renewables_Generation_2019_2022$year, y=EU_Yearly_Renewables_Generation_2019_2022$generation_twh, fill=EU_Yearly_Renewables_Generation_2019_2022$variable)) +
geom_area()+theme_bw(base_size=8)+theme(strip.background =element_rect(fill="white"))+labs(y="EU Energy Generation by Source (Terawatt hour)",x= "Year",title = "EU Energy Production Profile (2019 to 2022)")+ guides(fill=guide_legend(title="EU Energy Production Type"))+scale_fill_manual(values = c("skyblue1","orange1","dodgerblue","chartreuse4","green3","violet","gray","grey20","seashell4"))
EU_Energy_Production_Profile
EU_Energy_Production_Profile_2019_2022
par( mfrow= c(1,2) )
France_Energy_Production_Profile <- ggplot(France_Annual_Renewable_Energy_Generation, aes(x=France_Annual_Renewable_Energy_Generation$year, y=France_Annual_Renewable_Energy_Generation$generation_twh, fill=France_Annual_Renewable_Energy_Generation$variable)) +
geom_area()+theme_bw(base_size=8)+theme(strip.background =element_rect(fill="white"))+ labs(y="EU Energy Generation by Source",x= "Year",title = "France Energy Production Profile (2000 to 2022)")+ guides(fill=guide_legend(title="France Energy Production Type"))+ scale_fill_manual(values = c("skyblue1","orange1","dodgerblue","chartreuse4","green3","violet","gray","grey20","seashell4"))
France_Energy_Production_Profile_2019_2022 <- ggplot(France_Annual_Renewable_Energy_Generation_2019_2022, aes(x=France_Annual_Renewable_Energy_Generation_2019_2022$year, y=France_Annual_Renewable_Energy_Generation_2019_2022$generation_twh, fill=France_Annual_Renewable_Energy_Generation_2019_2022$variable)) +
geom_area()+theme_bw(base_size=8)+theme(strip.background =element_rect(fill="white"))+labs(y="France Energy Generation by Source (Terawatt hour)",x= "Year",title = "France Energy Production Profile (2019 to 2022)")+ guides(fill=guide_legend(title="France Energy Production Type"))+scale_fill_manual(values = c("skyblue1","orange1","dodgerblue","chartreuse4","green3","violet","gray","grey20","seashell4"))
plot(France_Energy_Production_Profile)
plot(France_Energy_Production_Profile_2019_2022)
# We also calculated the percentages of nuclear power as a percentage of total energy production in 2000 and 2022.
#France Nuclear Energy Percentage in 2000
France_Annual_Renewable_Energy_Generation[(France_Annual_Renewable_Energy_Generation$year==2000)&(France_Annual_Renewable_Energy_Generation$variable=="Nuclear"),]
sum(France_Annual_Renewable_Energy_Generation[which(France_Annual_Renewable_Energy_Generation$year==2000),4])
415.16/533.6
#France Nuclear Energy Percentage in 2022
France_Annual_Renewable_Energy_Generation[(France_Annual_Renewable_Energy_Generation$year==2022)&(France_Annual_Renewable_Energy_Generation$variable=="Nuclear"),]
sum(France_Annual_Renewable_Energy_Generation[which(France_Annual_Renewable_Energy_Generation$year==2022),4])
297.2/469.48
par( mfrow= c(1,2) )
Germany_Energy_Production_Profile <- ggplot(Germany_Annual_Renewable_Energy_Generation_Data, aes(x=Germany_Annual_Renewable_Energy_Generation_Data$year, y=Germany_Annual_Renewable_Energy_Generation_Data$generation_twh, fill=Germany_Annual_Renewable_Energy_Generation_Data$variable)) +
geom_area()+theme_bw(base_size=8)+theme(strip.background =element_rect(fill="white"))+ labs(y="Germany Energy Generation by Source",x= "Year",title = "Germany Energy Production Profile (2000 to 2022)")+ guides(fill=guide_legend(title="Germany Energy Production Type"))+ scale_fill_manual(values = c("skyblue1","orange1","dodgerblue","chartreuse4","green3","violet","gray","grey20","seashell4"))
Germany_Energy_Production_Profile_2019_2022 <- ggplot(Germany_Annual_Renewable_Energy_Generation_Data_2019_2022, aes(x=Germany_Annual_Renewable_Energy_Generation_Data_2019_2022$year, y=Germany_Annual_Renewable_Energy_Generation_Data_2019_2022$generation_twh, fill=Germany_Annual_Renewable_Energy_Generation_Data_2019_2022$variable)) +
geom_area()+theme_bw(base_size=8)+theme(strip.background =element_rect(fill="white"))+labs(y="Germany Energy Generation by Source (Terawatt hour) ",x= "Year",title = "Germany Energy Production Profile (2019 to 2022)")+ guides(fill=guide_legend(title="Germany Energy Production Type"))+scale_fill_manual(values = c("skyblue1","orange1","dodgerblue","chartreuse4","green3","violet","gray","grey20","seashell4"))
plot(Germany_Energy_Production_Profile)
plot(Germany_Energy_Production_Profile_2019_2022)
#We also calculated the change in coal use in Germany as a percentage of total energy production
#Germany Coal Energy Percentage in 2000
Germany_Annual_Renewable_Energy_Generation_Data[(Germany_Annual_Renewable_Energy_Generation_Data$year==2000)&(Germany_Annual_Renewable_Energy_Generation_Data$variable=="Coal"),]
sum(Germany_Annual_Renewable_Energy_Generation_Data[which(Germany_Annual_Renewable_Energy_Generation_Data$year==2000),4])
296.68/572.3
#Germany Coal Energy Percentage in 2020
Germany_Annual_Renewable_Energy_Generation_Data[(France_Annual_Renewable_Energy_Generation$year==2020)&(Germany_Annual_Renewable_Energy_Generation_Data$variable=="Coal"),]
sum(Germany_Annual_Renewable_Energy_Generation_Data[which(Germany_Annual_Renewable_Energy_Generation_Data$year==2020),4])
134.6/567.26
#Change Time
Monthly_Oil_Statistics$Year <- as.Date(Monthly_Oil_Statistics$Year,"%m/%d/%Y")
Monthly_Oil_Statistics$Price <- as.numeric(Monthly_Oil_Statistics$Price,na.rm=TRUE)
Monthly_Oil_Statistics$Price <- format(round(Monthly_Oil_Statistics$Price, 2), nsmall = 2)
France_Gasoline_Price <- Monthly_Oil_Statistics[(Monthly_Oil_Statistics$COUNTRY=="France")&(Monthly_Oil_Statistics$UNIT=="US dollars")&(Monthly_Oil_Statistics$PRODUCT=="Gasoline (unit/litre)"),]
France_Diesel_Price <- Monthly_Oil_Statistics[(Monthly_Oil_Statistics$COUNTRY=="France")&(Monthly_Oil_Statistics$UNIT=="US dollars")&(Monthly_Oil_Statistics$PRODUCT=="Diesel (unit/litre)"),]
France_Heating_Oil_Price <- Monthly_Oil_Statistics[(Monthly_Oil_Statistics$COUNTRY=="France")&(Monthly_Oil_Statistics$UNIT=="US dollars")&(Monthly_Oil_Statistics$PRODUCT=="Domestic heating oil (unit/litre)"),]
Germany_Gasoline_Price <- Monthly_Oil_Statistics[(Monthly_Oil_Statistics$COUNTRY=="Germany")&(Monthly_Oil_Statistics$UNIT=="US dollars")&(Monthly_Oil_Statistics$PRODUCT=="Gasoline (unit/litre)"),]
Germany_Diesel_Price <- Monthly_Oil_Statistics[(Monthly_Oil_Statistics$COUNTRY=="Germany")&(Monthly_Oil_Statistics$UNIT=="US dollars")&(Monthly_Oil_Statistics$PRODUCT=="Diesel (unit/litre)"),]
Germany_Heating_Oil_Price <- Monthly_Oil_Statistics[(Monthly_Oil_Statistics$COUNTRY=="Germany")&(Monthly_Oil_Statistics$UNIT=="US dollars")&(Monthly_Oil_Statistics$PRODUCT=="Domestic heating oil (unit/litre)"),]
par( mfrow= c(1,2))
#we start with plotting for France
France_Energy_Prices <- plot_ly(x = France_Gasoline_Price$Year, y =France_Gasoline_Price$Price,name = "Gasoline", type = 'scatter', mode = 'markers+lines')
France_Energy_Prices <-  add_trace(France_Energy_Prices, x = France_Diesel_Price$Year, y = France_Diesel_Price$Price,name = "Diesel", type="scatter", mode="markers+lines")
France_Energy_Prices <-  add_trace(France_Energy_Prices, x = France_Heating_Oil_Price$Year, y = France_Heating_Oil_Price$Price,name = "Heating Oil", type="scatter", mode="markers+lines")
France_Energy_Prices <- France_Energy_Prices %>% layout(title = 'France Gasoline, Diesel,and Heating Oil Price (2015-2023)',
xaxis = list(
rangeselector = list(
buttons = list(
list(
count = 3,
label = "3 mo",
step = "month",
stepmode = "backward"),
list(
count = 6,
label = "6 mo",
step = "month",
stepmode = "backward"),
list(
count = 1,
label = "1 yr",
step = "year",
stepmode = "backward"),
list(
count = 3,
label = "3 yr",
step = "year",
stepmode = "backward"),
list(step = "all"))),
rangeslider = list(type = "date")),
yaxis = list (title = 'Prices'))
France_Energy_Prices
htmlwidgets::saveWidget(as_widget(France_Energy_Prices), "France_Energy_Prices.html")
#We then move on to Germany using similar methods
Germany_Energy_Prices <- plot_ly(x = Germany_Gasoline_Price$Year, y =Germany_Gasoline_Price$Price,name = "Gasoline", type = 'scatter', mode = 'markers+lines')
Germany_Energy_Prices <-  add_trace(Germany_Energy_Prices, x = Germany_Diesel_Price$Year, y = Germany_Diesel_Price$Price,name = "Diesel", type="scatter", mode="markers+lines")
Germany_Energy_Prices <-  add_trace(Germany_Energy_Prices, x = Germany_Heating_Oil_Price$Year, y = Germany_Heating_Oil_Price$Price,name = "Heating Oil", type="scatter", mode="markers+lines")
Germany_Energy_Prices <- Germany_Energy_Prices %>% layout(title = 'Germany Gasoline, Diesel,and Heating Oil Price (2015-2023)',
xaxis = list(
rangeselector = list(
buttons = list(
list(
count = 3,
label = "3 mo",
step = "month",
stepmode = "backward"),
list(
count = 6,
label = "6 mo",
step = "month",
stepmode = "backward"),
list(
count = 1,
label = "1 yr",
step = "year",
stepmode = "backward"),
list(
count = 3,
label = "3 yr",
step = "year",
stepmode = "backward"),
list(step = "all"))),
rangeslider = list(type = "date")),
yaxis = list (title = 'Prices'))
Germany_Energy_Prices
htmlwidgets::saveWidget(as_widget(France_Energy_Prices), "Germany_Energy_Prices.html")
